apiVersion: flightctl.io/v1alpha1
kind: Fleet
metadata:
  annotations: {}
  labels:
    scenario: 'base'
  name: base
spec:
  selector:
    matchLabels:
      scenario: 'base'
  template:
    metadata:
      labels:
        fleet: base
    spec:
      applications: []
      config: []
      os:
        image: edge-registry.itix.fr/demo-edge-retail/base:latest
      systemd:
        matchPatterns: []
---
apiVersion: flightctl.io/v1alpha1
kind: Fleet
metadata:
  annotations: {}
  labels:
    scenario: 'scenario1'
  name: scenario1
spec:
  selector:
    matchLabels:
      scenario: 'scenario1'
  template:
    metadata:
      labels:
        fleet: scenario1
    spec:
      applications: []
      os:
        image: edge-registry.itix.fr/demo-edge-retail/scenario1:latest
      config:
      - name: scenario1-config
        configType: GitConfigProviderSpec
        gitRef:
          path: /flightctl/scenario1/sites/{{ getOrDefault .metadata.labels "site" "default" }}/
          repository: demo-edge-retail
          targetRevision: main
      systemd:
        matchPatterns:
          - nextcloud-app.service
          - nextcloud-db.service
          - nextcloud-nginx.service
          - nextcloud-redis.service
---
apiVersion: flightctl.io/v1alpha1
kind: Fleet
metadata:
  annotations: {}
  labels:
    scenario: 'scenario3a'
  name: scenario3a
spec:
  selector:
    matchLabels:
      scenario: 'scenario3a'
      type: 'baremetal'
  template:
    metadata:
      labels:
        fleet: scenario3a
    spec:
      applications: []
      config: []
      os:
        image: edge-registry.itix.fr/demo-edge-retail/scenario3a:latest
      systemd:
        matchPatterns:
          - bootstrap-vm@nextcloud.service
          - libvirtd.service
          - nftables.service
---
apiVersion: flightctl.io/v1alpha1
kind: Fleet
metadata:
  annotations: {}
  labels:
    scenario: 'scenario4'
  name: scenario4
spec:
  selector:
    matchLabels:
      scenario: 'scenario4'
  template:
    metadata:
      labels:
        fleet: scenario4
    spec:
      applications: []
      os:
        image: edge-registry.itix.fr/demo-edge-retail/scenario4:latest
      config:
      - name: scenario4-config
        configType: GitConfigProviderSpec
        gitRef:
          path: /flightctl/scenario4/sites/{{ getOrDefault .metadata.labels "site" "default" }}/
          repository: demo-edge-retail
          targetRevision: main
      systemd:
        matchPatterns:
          - odoo-app.service
          - odoo-db.service
          - odoo-init.service
